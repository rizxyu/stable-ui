(function(){"use strict";onmessage=async m=>{try{const{initFramerate:o,finalFramerate:r,imageArray:s,DEBUG_MODE:p}=m.data;self.document={},self.importScripts("https://unpkg.com/@ffmpeg/ffmpeg@0.11.6/dist/ffmpeg.min.js");const t=self.FFmpeg.createFFmpeg({corePath:"https://unpkg.com/@ffmpeg/core-st@0.11.1/dist/ffmpeg-core.js",mainName:"main",log:p,progress:e=>postMessage({progress:e,type:"progress"})});await t.load();for(let e=0;e<s.length;e++)t.FS("writeFile",`${e}.jpg`,s[e]);await t.run("-framerate",`${o}`,"-i","%d.jpg","-crf","17","-vf",`minterpolate=fps=${r}:mi_mode=mci:mc_mode=aobmc:me_mode=bidir:vsbmc=1:scd=none`,"-c:v","libx264","-pix_fmt","yuv420p","out.mp4");const a=t.FS("readFile","out.mp4"),i=new Blob([a.buffer],{type:"video/mp4"});postMessage({type:"result",blob:i});for(let e=0;e<s.length;e++)t.FS("unlink",`${e}.jpg`);t.FS("unlink","out.mp4")}catch(o){postMessage({type:"error",error:o})}}})();
